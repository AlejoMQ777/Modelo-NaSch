# -*- coding: utf-8 -*-
"""Modelo NaSch

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W_Ec6SqgBxka-MwKOLsB0TRPkwLBpdwI
"""

import numpy as np
import matplotlib.pyplot as plt

L = 100
N = 30
Vmax = 5
p = 0.3
steps = 50

road = -1 * np.ones(L, dtype=int)
positions = np.random.choice(range(L), N, replace=False)
velocities = np.zeros(N, dtype=int)

for i, pos in enumerate(positions):
    road[pos] = i

history = []

def update():
    global positions, velocities, road
    road[:] = -1
    velocities[:] = np.minimum(velocities + 1, Vmax)
    order = np.argsort(positions)
    for i in range(N):
        car = order[i]
        next_car = order[(i+1) % N]
        gap = (positions[next_car] - positions[car] - 1) % L
        velocities[car] = min(velocities[car], gap)
    random_slow = np.random.rand(N) < p
    velocities[:] = np.maximum(velocities - random_slow, 0)
    positions[:] = (positions + velocities) % L
    for i, pos in enumerate(positions):
        road[pos] = i
    history.append(positions.copy())

for t in range(steps):
    update()

plt.figure(figsize=(10, 6))
for t, pos in enumerate(history):
    plt.scatter(pos, [t]*len(pos), c='black', s=10)
plt.xlabel("PosiciÃ³n en la carretera")
plt.ylabel("Tiempo (pasos)")
plt.title("Modelo de Nagel-Schreckenberg (NaSch)")
plt.show()